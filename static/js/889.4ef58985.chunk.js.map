{"version":3,"file":"static/js/889.4ef58985.chunk.js","mappings":"uMAEaA,E,OAAWC,EAAAA,EAAH,uD,SCCRC,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnBC,GAAWC,EAAAA,EAAAA,MACjB,GAAKF,EAGL,OACE,0BACE,wBACGA,EAAWG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAChD,OACE,eAAaA,GAAIA,EAAjB,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,UACE,SAACJ,EAAD,UAAWO,GAAiBC,OAFvBC,EAMZ,OAIR,C,oICpBYI,EAASZ,EAAAA,EAAAA,OAAH,icAkBNa,GAAab,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,8KASVe,EAAef,EAAAA,EAAAA,OAAH,gVAiBZgB,GAAQhB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAPjB,CAAH,2P,SC1CLkB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAS1B,OACE,+BACE,SAAC,KAAD,CAAQC,cAVU,CACpBC,MAAO,IASiCF,SANrB,SAACG,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,EAASG,GACTC,GACD,EAGG,UACE,SAACX,EAAD,WACE,UAACC,EAAD,YACE,SAACE,EAAD,CAAcS,KAAK,SAAnB,UACE,2BACE,SAAC,MAAD,CAAUC,KAAM,UAIpB,SAACT,EAAD,CACEQ,KAAK,OACLE,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,yBAOzB,E,6CC7BYC,EAAS,WACpB,OAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EACL,KACsBG,EAAAA,EAAAA,IAAgBH,GAExBI,MAAK,SAAAC,GAOf,OANoB,IAAhBA,EAAKC,QACPC,EAAAA,GAAAA,MAAY,qBAAsB,CAChCC,SAAUD,EAAAA,GAAAA,SAAAA,WAIPX,EAAcS,EACtB,GAIF,CAHC,MAAOI,GACPC,QAAQC,KAAK,sBAAuBF,GACpCF,EAAAA,GAAAA,MAAYE,EACb,CACF,GAAE,CAACT,IAYJ,OACE,4BACE,SAACnB,EAAD,CAAWC,SAZE,SAAAG,GACf,GAA4B,KAAxBA,EAAOD,MAAM4B,OACf,OAAOL,EAAAA,GAAAA,KAAW,2BACTtB,EAAOD,QAAUgB,GAI5BD,EAAgB,CAAEC,MAAOf,EAAOD,OACjC,IAKIW,IAAc,SAAC/B,EAAA,EAAD,CAAUC,WAAY8B,MAG1C,C","sources":["components/HomeList.styled.js","components/HomeList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmName = styled.p`\n  margin: 0;\n  padding: 2px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmName } from './HomeList.styled';\n\nexport const HomeList = ({ trendFilms }) => {\n  const location = useLocation();\n  if (!trendFilms) {\n    return;\n  }\n  return (\n    <div>\n      <ul>\n        {trendFilms.map(({ original_name, original_title, id }) => {\n          return (\n            <li key={id} id={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <FilmName>{original_name || original_title}</FilmName>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const FormSearch = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const ButtonSubmit = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { FiSearch } from 'react-icons/fi';\nimport { ButtonSubmit, FormSearch, Header, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const initialValues = {\n    value: '',\n  };\n\n  const searchSubmit = (values, { resetForm }) => {\n    onSubmit(values);\n    resetForm();\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={searchSubmit}>\n        <Header>\n          <FormSearch>\n            <ButtonSubmit type=\"submit\">\n              <span>\n                <FiSearch size={20} />\n              </span>\n            </ButtonSubmit>\n\n            <Input\n              type=\"text\"\n              name=\"value\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search films\"\n            />\n          </FormSearch>\n        </Header>\n      </Formik>\n    </>\n  );\n};\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { HomeList } from 'components/HomeList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchSearchFilm } from 'tools/Api';\n\nexport const Movies = () => {\n  const [searchFilm, setSearchFilm] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const quary = searchParams.get('quary');\n\n  useEffect(() => {\n    if (!quary) return;\n    try {\n      const searchFilms = fetchSearchFilm(quary);\n\n      searchFilms.then(data => {\n        if (data.length === 0) {\n          toast.error('Nothing is found !', {\n            position: toast.POSITION.TOP_LEFT,\n          });\n        }\n\n        return setSearchFilm(data);\n      });\n    } catch (message) {\n      console.warn('message ERROR movie', message);\n      toast.error(message);\n    }\n  }, [quary]);\n\n  const onSubmit = values => {\n    if (values.value.trim() === '') {\n      return toast.warn('Enter a word for search');\n    } else if (values.value === quary) {\n      return;\n    }\n\n    setSearchParams({ quary: values.value });\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={onSubmit} />\n      {searchFilm && <HomeList trendFilms={searchFilm} />}\n    </div>\n  );\n};\n"],"names":["FilmName","styled","HomeList","trendFilms","location","useLocation","map","original_name","original_title","id","to","state","from","Header","FormSearch","Form","ButtonSubmit","Input","Field","SearchBox","onSubmit","initialValues","value","values","resetForm","type","size","name","autoComplete","autoFocus","placeholder","Movies","useState","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","quary","get","useEffect","fetchSearchFilm","then","data","length","toast","position","message","console","warn","trim"],"sourceRoot":""}