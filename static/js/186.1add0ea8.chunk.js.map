{"version":3,"file":"static/js/186.1add0ea8.chunk.js","mappings":"oOAIaA,EAAU,WACrB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,KACeC,EAAAA,EAAAA,IAAaN,GAErBO,MAAK,SAAAC,GACR,OAAOJ,EAAUI,EAClB,GAGF,CAFC,MAAOC,GACPC,QAAQC,KAAKF,EACd,CACF,GAAE,CAACT,KAKF,2BACE,wBACqB,IAAlBG,EAAOS,OACNT,EAAOU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC7B,OACE,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EAKZ,KAED,yEAKT,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'tools/Api';\n\nexport const Reviews = () => {\n  const { Id } = useParams();\n\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    try {\n      const cast = fetchReviews(Id);\n\n      cast.then(data => {\n        return setReview(data);\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }, [Id]);\n\n  // console.log('review ARRAY:', review);\n\n  return (\n    <main>\n      <ul>\n        {review.length !== 0 ? (\n          review.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h3>Athor: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We do not have any reviews for this movie.</p>\n        )}\n      </ul>\n    </main>\n  );\n};\n"],"names":["Reviews","Id","useParams","useState","review","setReview","useEffect","fetchReviews","then","data","error","console","warn","length","map","author","content","id"],"sourceRoot":""}