{"version":3,"file":"static/js/387.0e8ef3da.chunk.js","mappings":"8OAEaA,EAAYC,EAAAA,EAAAA,KAAH,6CAITC,EAAaD,EAAAA,EAAAA,GAAH,wR,SCDVE,EAAO,WAClB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAcA,SAASC,EAAWC,GAClB,OAAqB,OAAjBA,QAA0CC,IAAjBD,EACpB,+EAGH,sCAAN,OAA6CA,EAC9C,CAED,OApBAE,EAAAA,EAAAA,YAAU,WACR,KACeC,EAAAA,EAAAA,GAAUT,GAElBU,MAAK,SAAAC,GACR,OAAOP,EAAQO,EAChB,GAGF,CAFC,MAAOC,GACPC,QAAQC,KAAKF,EACd,CACF,GAAE,CAACZ,KAWF,SAACJ,EAAD,WACE,SAACE,EAAD,UACGK,EACGA,EAAKY,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,UAAWX,EAAsC,EAAtCA,aAAcY,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,cAC7C,OACE,2BACE,gBAAKC,IAAKf,EAAWC,GAAee,IAAI,QAAQC,MAAM,SACtD,uBAAIN,GAAQG,KACZ,uCAAeF,OAHRC,EAMZ,IACD,SAIX,C,6LC7CKK,EAAU,mCACVC,EAAW,gDAEXC,EAAW,sCACXC,EAAM,gCAGG,SAAeC,IAA9B,+B,aAAe,O,oBAAA,+FACPC,EAAS,CACbC,OAAQ,MACRC,IAAKN,EACLO,OAAQ,CACNC,QAAST,IALA,UASUU,EAAAA,EAAAA,IAAML,GAThB,cASPM,EATO,OAWPvB,EAAOuB,EAASvB,KAAKwB,QAXd,kBAYNxB,GAZM,kEAwBR,SAAeF,EAAtB,kC,aAAO,O,oBAAA,WAAyBT,GAAzB,kFACC8B,EADD,UACUL,GADV,OACqBzB,EADrB,4BAC2CuB,EAD3C,6BAGkBU,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCvB,EAAOuB,EAASvB,KAAKR,KALtB,kBAMEQ,GANF,kEAUA,SAAeyB,EAAtB,kC,aAAO,O,oBAAA,WAA4BpC,GAA5B,kFACC8B,EADD,UACUL,GADV,OACqBzB,EADrB,4BAC2CuB,EAD3C,oCAGkBU,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCvB,EAAOuB,EAASvB,KAAKwB,QALtB,kBAMExB,GANF,kEAWA,SAAe0B,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,kFACCR,EADD,UACUJ,EADV,gCACqCH,EADrC,iCACqEe,EADrE,yCAGkBL,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCvB,EAAOuB,EAASvB,KAAKwB,QALtB,kBAMExB,GANF,kEAWA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BvC,GAA5B,kFACC8B,EADD,UACUJ,EADV,iBACsB1B,EADtB,oBACoCuB,EADpC,6BAGkBU,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCvB,EAAOuB,EAASvB,KALjB,kBAMEA,GANF,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","tools/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainActor = styled.main`\n  margin-top: 10px;\n`;\n\nexport const ActorCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'tools/Api';\nimport { ActorCards, MainActor } from './Cast.styled';\n\nexport const Cast = () => {\n  const { Id } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    try {\n      const cast = fetchCast(Id);\n\n      cast.then(data => {\n        return setCast(data);\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }, [Id]);\n\n  function setProfile(profile_path) {\n    if (profile_path === null || profile_path === undefined) {\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\n    }\n\n    return `https://www.themoviedb.org/t/p/w500${profile_path}`;\n  }\n\n  return (\n    <MainActor>\n      <ActorCards>\n        {cast\n          ? cast.map(({ name, character, profile_path, id, original_name }) => {\n              return (\n                <li key={id}>\n                  <img src={setProfile(profile_path)} alt=\"actor\" width=\"100\" />\n                  <p>{name || original_name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })\n          : 'N/A'}\n      </ActorCards>\n    </MainActor>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '0deed939492f10fa02b7b267dbfb9d49';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list?';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\nconst URL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендових фільмів\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n// Фетч жанрів\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n// Фетч Акторів\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\n// Фетч фільм-ревью\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук фільмів\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук по айді інформації про фільм\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n"],"names":["MainActor","styled","ActorCards","Cast","Id","useParams","useState","cast","setCast","setProfile","profile_path","undefined","useEffect","fetchCast","then","data","error","console","warn","map","name","character","id","original_name","src","alt","width","API_KEY","BASE_URL","URL_CAST","URL","fetchTrending","config","method","url","params","api_key","axios","response","results","fetchReviews","fetchSearchFilm","quary","ApiMovieInfo"],"sourceRoot":""}