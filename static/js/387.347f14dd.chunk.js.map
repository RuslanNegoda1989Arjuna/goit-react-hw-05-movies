{"version":3,"file":"static/js/387.347f14dd.chunk.js","mappings":"8OAEaA,EAAYC,EAAAA,EAAAA,KAAH,6CAITC,EAAaD,EAAAA,EAAAA,GAAH,wR,SCDVE,EAAO,WAClB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAcA,SAASC,EAAWC,GAClB,OAAqB,OAAjBA,QAA0CC,IAAjBD,EACpB,+EAGH,sCAAN,OAA6CA,EAC9C,CAED,OApBAE,EAAAA,EAAAA,YAAU,WACR,KACeC,EAAAA,EAAAA,GAAUT,GAElBU,MAAK,SAAAC,GACR,OAAOP,EAAQO,EAChB,GAGF,CAFC,MAAOC,GACPC,QAAQC,KAAKF,EACd,CACF,GAAE,CAACZ,KAWF,SAACJ,EAAD,WACE,SAACE,EAAD,UACGK,EACGA,EAAKY,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,UAAWX,EAAsC,EAAtCA,aAAcY,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,cAC7C,OACE,2BACE,gBAAKC,IAAKf,EAAWC,GAAee,IAAI,QAAQC,MAAM,SACtD,uBAAIN,GAAQG,KACZ,uCAAeF,OAHRC,EAMZ,IACD,SAIX,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainActor = styled.main`\n  margin-top: 10px;\n`;\n\nexport const ActorCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'tools/Api';\nimport { ActorCards, MainActor } from './Cast.styled';\n\nexport const Cast = () => {\n  const { Id } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    try {\n      const cast = fetchCast(Id);\n\n      cast.then(data => {\n        return setCast(data);\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }, [Id]);\n\n  function setProfile(profile_path) {\n    if (profile_path === null || profile_path === undefined) {\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\n    }\n\n    return `https://www.themoviedb.org/t/p/w500${profile_path}`;\n  }\n\n  return (\n    <MainActor>\n      <ActorCards>\n        {cast\n          ? cast.map(({ name, character, profile_path, id, original_name }) => {\n              return (\n                <li key={id}>\n                  <img src={setProfile(profile_path)} alt=\"actor\" width=\"100\" />\n                  <p>{name || original_name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })\n          : 'N/A'}\n      </ActorCards>\n    </MainActor>\n  );\n};\n"],"names":["MainActor","styled","ActorCards","Cast","Id","useParams","useState","cast","setCast","setProfile","profile_path","undefined","useEffect","fetchCast","then","data","error","console","warn","map","name","character","id","original_name","src","alt","width"],"sourceRoot":""}