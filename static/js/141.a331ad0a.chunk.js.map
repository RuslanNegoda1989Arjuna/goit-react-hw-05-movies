{"version":3,"file":"static/js/141.a331ad0a.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","tools/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmName = styled.p`\n  margin: 0;\n  padding: 2px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const FilmCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmItem = styled.li`\n  transition: all 0.2s ease-in-out;\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmCards, FilmItem, FilmName } from './MovieList.styled';\n\nexport const HomeList = ({ trendFilms }) => {\n  const location = useLocation();\n  if (!trendFilms) {\n    return;\n  }\n  return (\n    <div>\n      <FilmCards>\n        {trendFilms.map(\n          ({ original_name, original_title, id, poster_path }) => {\n            return (\n              <FilmItem key={id} id={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n                        : 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg'\n                    }\n                    alt=\"Poster film\"\n                    title={original_name || original_title}\n                    width=\"230\"\n                  />\n                  <FilmName>{original_name || original_title}</FilmName>\n                </Link>\n              </FilmItem>\n            );\n          }\n        )}\n      </FilmCards>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const FormSearch = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const ButtonSubmit = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { FiSearch } from 'react-icons/fi';\nimport { ButtonSubmit, FormSearch, Header, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const initialValues = {\n    value: '',\n  };\n\n  const searchSubmit = (values, { resetForm }) => {\n    onSubmit(values);\n    resetForm();\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={searchSubmit}>\n        <Header>\n          <FormSearch>\n            <ButtonSubmit type=\"submit\">\n              <span>\n                <FiSearch size={20} />\n              </span>\n            </ButtonSubmit>\n\n            <Input\n              type=\"text\"\n              name=\"value\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search films\"\n            />\n          </FormSearch>\n        </Header>\n      </Formik>\n    </>\n  );\n};\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { HomeList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchSearchFilm } from 'tools/Api';\n\nexport const Movies = () => {\n  const [searchFilm, setSearchFilm] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const quary = searchParams.get('quary');\n\n  useEffect(() => {\n    if (!quary) return;\n    try {\n      const searchFilms = fetchSearchFilm(quary);\n\n      searchFilms.then(data => {\n        if (data.length === 0) {\n          toast.error(`Nothing is found with this film name: ${quary}!`, {\n            position: toast.POSITION.TOP_LEFT,\n          });\n        }\n\n        return setSearchFilm(data);\n      });\n    } catch (message) {\n      console.warn('message ERROR movie', message);\n      toast.error(message);\n    }\n  }, [quary]);\n\n  const onSubmit = values => {\n    if (values.value.trim() === '') {\n      return toast.warn('Enter a word for search');\n    } else if (values.value === quary) {\n      return;\n    }\n\n    setSearchParams({ quary: values.value });\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={onSubmit} />\n      {searchFilm && <HomeList trendFilms={searchFilm} />}\n    </div>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '0deed939492f10fa02b7b267dbfb9d49';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list?';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\nconst URL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендових фільмів\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n// Фетч жанрів\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n// Фетч Акторів\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\n// Фетч фільм-ревью\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук фільмів\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук по айді інформації про фільм\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n"],"names":["FilmName","styled","FilmCards","FilmItem","HomeList","trendFilms","location","useLocation","map","original_name","original_title","id","poster_path","to","state","from","src","alt","title","width","Header","FormSearch","Form","ButtonSubmit","Input","Field","SearchBox","onSubmit","initialValues","value","values","resetForm","type","size","name","autoComplete","autoFocus","placeholder","Movies","useState","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","quary","get","useEffect","fetchSearchFilm","then","data","length","toast","position","message","console","warn","trim","API_KEY","BASE_URL","URL_CAST","URL","fetchTrending","config","method","url","params","api_key","axios","response","results","fetchCast","Id","cast","fetchReviews","ApiMovieInfo"],"sourceRoot":""}