{"version":3,"file":"static/js/304.1799cee5.chunk.js","mappings":"mNAEaA,EAAWC,EAAAA,EAAAA,EAAH,uHAQRC,EAAYD,EAAAA,EAAAA,GAAH,2RAaTE,EAAWF,EAAAA,EAAAA,GAAH,wH,SCpBRG,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnBC,GAAWC,EAAAA,EAAAA,MACjB,GAAKF,EAGL,OACE,0BACE,SAACH,EAAD,UACGG,EAAWG,KACV,YAAyD,IAAtDC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACpC,OACE,SAACT,EAAD,CAAmBQ,GAAIA,EAAvB,UACE,UAAC,KAAD,CAAME,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA1C,WACE,gBACEU,IACEJ,EAAW,6CAC+BA,GACtC,+EAENK,IAAI,cACJC,MAAOT,GAAiBC,EACxBS,MAAM,SAER,SAACnB,EAAD,UAAWS,GAAiBC,QAZjBC,EAgBlB,OAKV,C,2HCjCYS,E,OAAgBnB,EAAAA,GAAH,qM,SCIboB,EAAO,WAClB,OAAoCC,EAAAA,EAAAA,YAApC,eAAOjB,EAAP,KAAmBkB,EAAnB,KAeA,OAZAC,EAAAA,EAAAA,YAAU,WACR,KACgBC,EAAAA,EAAAA,MAERC,MAAK,SAAAC,GACT,OAAOJ,EAAcI,EACtB,GAGF,CAFC,MAAOC,GACPC,EAAAA,GAAAA,MAAY,CAAED,MAAAA,GACf,CACF,GAAE,KAGD,6BACE,SAACR,EAAD,8BACA,SAAC,IAAD,CAAUf,WAAYA,MAG3B,C,6LC3BKyB,EAAU,mCACVC,EAAW,gDAEXC,EAAW,sCACXC,EAAM,gCAGG,SAAeR,IAA9B,+B,aAAe,O,oBAAA,+FACPS,EAAS,CACbC,OAAQ,MACRC,IAAKL,EACLM,OAAQ,CACNC,QAASR,IALA,UASUS,EAAAA,EAAAA,IAAML,GAThB,cASPM,EATO,OAWPb,EAAOa,EAASb,KAAKc,QAXd,kBAYNd,GAZM,kEAwBR,SAAee,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,kFACCP,EADD,UACUJ,GADV,OACqBW,EADrB,4BAC2Cb,EAD3C,6BAGkBS,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCb,EAAOa,EAASb,KAAKiB,KALtB,kBAMEjB,GANF,kEAUA,SAAekB,EAAtB,kC,aAAO,O,oBAAA,WAA4BF,GAA5B,kFACCP,EADD,UACUJ,GADV,OACqBW,EADrB,4BAC2Cb,EAD3C,oCAGkBS,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCb,EAAOa,EAASb,KAAKc,QALtB,kBAMEd,GANF,kEAWA,SAAemB,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,kFACCX,EADD,UACUH,EADV,gCACqCH,EADrC,iCACqEiB,EADrE,yCAGkBR,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCb,EAAOa,EAASb,KAAKc,QALtB,kBAMEd,GANF,kEAWA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,kFACCP,EADD,UACUH,EADV,iBACsBU,EADtB,oBACoCb,EADpC,6BAGkBS,EAAAA,EAAAA,IAAMH,GAHxB,cAGCI,EAHD,OAKCb,EAAOa,EAASb,KALjB,kBAMEA,GANF,kE","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","tools/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmName = styled.p`\n  margin: 0;\n  padding: 2px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const FilmCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmItem = styled.li`\n  transition: all 0.2s ease-in-out;\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmCards, FilmItem, FilmName } from './MovieList.styled';\n\nexport const HomeList = ({ trendFilms }) => {\n  const location = useLocation();\n  if (!trendFilms) {\n    return;\n  }\n  return (\n    <div>\n      <FilmCards>\n        {trendFilms.map(\n          ({ original_name, original_title, id, poster_path }) => {\n            return (\n              <FilmItem key={id} id={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n                        : 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg'\n                    }\n                    alt=\"Poster film\"\n                    title={original_name || original_title}\n                    width=\"230\"\n                  />\n                  <FilmName>{original_name || original_title}</FilmName>\n                </Link>\n              </FilmItem>\n            );\n          }\n        )}\n      </FilmCards>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TrendingTitle = styled.h1`\n  margin: 0px;\n  margin-top: 10px;\n  margin-left: 10px;\n  padding-bottom: 5px;\n  text-align: center;\n  border-bottom: 3px solid black;\n  border-top: 3px solid black;\n`;\n","import { HomeList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport fetchTrending from 'tools/Api';\nimport { TrendingTitle } from './Home.styled';\n\nexport const Home = () => {\n  const [trendFilms, setTrendFilms] = useState();\n\n  //  Фетч по трендовим фільмам\n  useEffect(() => {\n    try {\n      const films = fetchTrending();\n\n      films.then(data => {\n        return setTrendFilms(data);\n      });\n    } catch (error) {\n      toast.error({ error });\n    }\n  }, []);\n\n  return (\n    <main>\n      <TrendingTitle>Trending Today</TrendingTitle>\n      <HomeList trendFilms={trendFilms} />\n    </main>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '0deed939492f10fa02b7b267dbfb9d49';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list?';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\nconst URL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендових фільмів\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n// Фетч жанрів\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n// Фетч Акторів\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\n// Фетч фільм-ревью\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук фільмів\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\n// Пошук по айді інформації про фільм\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n"],"names":["FilmName","styled","FilmCards","FilmItem","HomeList","trendFilms","location","useLocation","map","original_name","original_title","id","poster_path","to","state","from","src","alt","title","width","TrendingTitle","Home","useState","setTrendFilms","useEffect","fetchTrending","then","data","error","toast","API_KEY","BASE_URL","URL_CAST","URL","config","method","url","params","api_key","axios","response","results","fetchCast","Id","cast","fetchReviews","fetchSearchFilm","quary","ApiMovieInfo"],"sourceRoot":""}